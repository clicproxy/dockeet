<?php

/**
 * BaseUserDocument
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $document_id
 * @property integer $user_id
 * @property Document $Document
 * @property User $User
 * 
 * @method integer      getDocumentId()  Returns the current record's "document_id" value
 * @method integer      getUserId()      Returns the current record's "user_id" value
 * @method Document     getDocument()    Returns the current record's "Document" value
 * @method User         getUser()        Returns the current record's "User" value
 * @method UserDocument setDocumentId()  Sets the current record's "document_id" value
 * @method UserDocument setUserId()      Sets the current record's "user_id" value
 * @method UserDocument setDocument()    Sets the current record's "Document" value
 * @method UserDocument setUser()        Sets the current record's "User" value
 * 
 * @package    dockeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserDocument extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_document');
        $this->hasColumn('document_id', 'integer', null, array(
             'notnull' => true,
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'notnull' => true,
             'type' => 'integer',
             ));


        $this->index('user_document_unique', array(
             'fields' => 
             array(
              0 => 'user_id',
              1 => 'document_id',
             ),
             'type' => 'unique',
             ));
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Document', array(
             'local' => 'document_id',
             'foreign' => 'id',
             'onDelete' => 'cascade',
             'onUpdate' => 'cascade'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'cascade',
             'onUpdate' => 'cascade'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}