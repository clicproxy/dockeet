<?php

/**
 * BaseDocument
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property clob $description
 * @property string $file
 * @property Doctrine_Collection $Categories
 * @property Doctrine_Collection $Tags
 * @property Doctrine_Collection $Users
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6508 2009-10-14 06:28:49Z jwage $
 */
abstract class BaseDocument extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('document');
        $this->hasColumn('title', 'string', 255, array(
             'notnull' => true,
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('file', 'string', 255, array(
             'notnull' => true,
             'type' => 'string',
             'length' => '255',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Category as Categories', array(
             'refClass' => 'DocumentCategory',
             'local' => 'document_id',
             'foreign' => 'category_id'));

        $this->hasMany('Tag as Tags', array(
             'refClass' => 'DocumentTag',
             'local' => 'document_id',
             'foreign' => 'tag_id'));

        $this->hasMany('User as Users', array(
             'refClass' => 'UserDocument',
             'local' => 'document_id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $versionable0 = new Doctrine_Template_Versionable(array(
             'versionColumn' => 'version',
             'className' => '%CLASS%Version',
             'auditLog' => true,
             'deleteVersions' => false,
             ));
        $timestampable1 = new Doctrine_Template_Timestampable();
        $versionable0->addChild($timestampable1);
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             ));
        $searchable0 = new Doctrine_Template_Searchable(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'description',
              2 => 'file',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($versionable0);
        $this->actAs($sluggable0);
        $this->actAs($searchable0);
    }
}