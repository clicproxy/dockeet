actAs: [Timestampable]
options:
  type: INNODB
  collate: utf8_unicode_ci
  charset: utf8


User:
  actAs:
    Timestampable:
    Sluggable:
      fields: [username]
  columns:
    username:
      notnull: true
      type: string(255)
      unique: true
    password:
      notnull: true
      type: string(255)
    salt:
      notnull: true
      type: string(255)
    email:
      notnull: true
      type: string(255)
    admin:
      type: boolean
  relations:
    Categories:
      class: Category
      local: user_id
      foreign: category_id
      refClass: UserCategory
    Documents:
      class: Document
      local: user_id
      foreign: document_id
      refClass: UserDocument

Category:
  actAs:
    Sluggable:
      fields: [title]
    Timestampable:
  columns:
    title:
      notnull: true
      type: string(255)
      unique: true
    description: clob
  relations:
    Users:
      class: User
      local: category_id
      foreign: user_id
      refClass: UserCategory
    Documents:
      class: Document
      local: category_id
      foreign: document_id
      refClass: DocumentCategory

UserCategory:
  columns:
    user_id:
      notnull: true
      type: integer
    category_id:
      notnull: true
      type: integer
    subscribe: boolean
  indexes:
    user_category_unique:
      fields: [user_id, category_id]
      type: unique
  relations:
    User:
      local: user_id
      foreign: id
      onDelete: cascade
      onUpdate: cascade
    Category:
      local: category_id
      foreign: id
      onDelete: cascade
      onUpdate: cascade
      
Document:
  actAs:
    Timestampable:
    Sluggable:
      fields: [title]
    Searchable:
      fields: [title, description, file]
  columns:
    title:
      notnull: true
      type: string(255)
      unique: true
    description: clob
    file:
      notnull: true
      type: string(255)
    mime_type:
      notnull: true
      type: string(255)
    size:
      notnull: true
      type: string(255)
    public: boolean
  relations:
    Categories:
      class: Category
      local: document_id
      foreign: category_id
      refClass: DocumentCategory
    Tags:
      class: Tag
      local: document_id
      foreign: tag_id
      refClass: DocumentTag
    Users:
      class: User
      local: document_id
      foreign: user_id
      refClass: UserDocument
    Versions:
      type: many
      class: DocumentVersion
      local: id
      foreign: document_id
      

DocumentVersion:
  columns:
    document_id:
      notnull: true
      type: integer
    file:
      notnull: true
      type: string(255)
    mime_type:
      notnull: true
      type: string(255)
  relations:
    Document:
      local: document_id
      foreign: id
      onDelete: cascade
      onUpdate: cascade
    
DocumentCategory:
  columns:
    document_id:
      notnull: true
      type: integer
    category_id:
      notnull: true
      type: integer
  indexes:
    document_category_unique:
      fields: [document_id, category_id]
      type: unique
  relations:
    Document:
      local: document_id
      foreign: id
      onDelete: cascade
      onUpdate: cascade
    Category:
      local: category_id
      foreign: id
      onDelete: cascade
      onUpdate: cascade
      

Tag:
  actAs:
    Timestampable:
    Sluggable:
      fields: [title]
  columns:
    title:
      notnull: true
      type: string(255)
      unique: true
  relations:
    Documents:
      class: Document
      local: tag_id
      foreign: document_id
      refClass: DocumentTag

DocumentTag:
  columns:
    document_id:
      notnull: true
      type: integer
    tag_id:
      notnull: true
      type: integer
  indexes:
    document_tag_unique:
      fields: [document_id, tag_id]
      type: unique

UserDocument:
  columns:
    document_id:
      notnull: true
      type: integer
    user_id:
      notnull: true
      type: integer
  indexes:
    user_document_unique:
      fields: [user_id, document_id]
      type: unique
  relations:
    Document:
      local: document_id
      foreign: id
      onDelete: cascade
      onUpdate: cascade
    User:
      local: user_id
      foreign: id
      onDelete: cascade
      onUpdate: cascade

ApiAccess:
  columns:
    api_key:
      notnull: true
      type: string(255)
    api_secret:
      notnull: true
      type: string(255)
    user_id: integer
  indexes:
    api_key_unique:
      fields: [api_key]
      type: unique
  relations:
    User:
      local: user_id
      foreign: id
      onDelete: cascade
      onUpdate: cascade