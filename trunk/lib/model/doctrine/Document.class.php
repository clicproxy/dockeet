<?php

/**
 * Document
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    dockeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6508 2009-10-14 06:28:49Z jwage $
 */
class Document extends BaseDocument
{
	/**
	 * Path where files are saved
   * @param integer $version_id
	 * @return string
	 */
	public function getFilePath($version_id = null)
	{
	  $file_path = sfConfig::get('sf_upload_dir') . '/documents/' . substr(str_pad($this->id, 2, '0', STR_PAD_LEFT), -2) . '/';
	  if (null === $version_id)
	  {
	    $file_path .= $this->file;
	  }
	  else
	  {
	    $version = Doctrine::getTable('DocumentVersion')->find($version_id);
	    $file_path .= $version->file;
	  }
    return $file_path;
	}
	
	/**
	 * Delete document and files
	 * @param unknown_type $event
	 */
  public function postDelete($event)
  {
    if (file_exists($this->getFilePath()))
    {
      unlink($this->getFilePath());
    }
  }
  
  /**
   * Save old file
   * @param unknown_type $event
   */
  public function preSave($event)
  {
    if (in_array('file', $this->_modified, true))
    {
      $document_version = new DocumentVersion();
      $document_version->document_id = $this->id;
      $document_version->file = $this->file;
      $document_version->mime_type = $this->mime_type;
      
      $this->Versions[] = $document_version;  
    }
  }
  
  /**
   * Test if the user has subscribed to this document update
   * @param User $user
   * @return boolean
   */
  public function hasSubscribed (User $user)
  {
    $query_has_subscribed  = Doctrine::getTable('UserDocument')->createQuery('u')->where('u.user_id = ? AND u.document_id = ?');
    return 1 === $query_has_subscribed->count(array($user->id, $this->id));
  }
  
  /**
   * User subscription
   * @param User $user
   */
  public function subscribe (User $user)
  {
    $user_document = Doctrine::getTable('UserDocument')->createQuery('u')->where('document_id = ? AND user_id = ?', array($this->id, $user->id))->fetchOne();
    
    if (!$user_document instanceof UserDocument)
    {
      $user_document = new UserDocument();
      $user_document->Document= $this;
      $user_document->User = $user;
    }
    
    $user_document->save();
  }
  
  /**
   * User unsubscription
   * @param User $user
   */
  public function unsubscribe (User $user)
  {
    $user_document = Doctrine::getTable('UserDocument')->createQuery('u')->where('document_id = ? AND user_id = ?', array($this->id, $user->id))->fetchOne();
    
    if (!$user_document instanceof UserDocument)
    {
      throw new sfException('No relation between Document ' . $this->title . ' and user ' . $user->username);
    }
    
    $user_document->delete();
  }
  
  /**
   * Return the director where thumbnail of this document are saved
   * @return string
   */
  public function getThumbnailDirectory ()
  {
    return sfConfig::get('sf_upload_dir') . '/thumbnail/' . substr(str_pad($this->id, 2, '0', STR_PAD_LEFT), -2) . '/';
  }
  
  /**
   * Return the url of the Thumbnail
   * @param integer $width
   * @param integer $height
   * @return string
   */
  public function getThumbnailUrl ($width, $height = null)
  {
    $height = (null === $height) ? $width : $height;
    $thumbnail_web_directory = str_replace(sfConfig::get('sf_web_dir'), '', $this->getThumbnailDirectory());
    return $thumbnail_web_directory . $width . 'x' . $height . '_' . $this->file;
  }
}
